---
import { experimental_AstroContainer } from "astro/container";
import { getLocations } from "@db/map";
import Layout from "@layouts/Layout.astro";
import MapMarker from "@components/map/Marker.astro";
import WarningIcon from "@icons/warning.svg";

import "@styles/pages/search.css";

export const prerender = false;
const points = getLocations().map(({ type, coordinates, id }) => ({
  id,
  type,
  coordinates,
}));

const container = await experimental_AstroContainer.create();
const makerPins = [
  {
    id: "WATER_FOUNTAIN",
    html: await container.renderToString(MapMarker, {
      props: { type: "WATER_FOUNTAIN" },
    }),
  },
  {
    id: "TREAT",
    html: await container.renderToString(MapMarker, {
      props: { type: "TREAT" },
    }),
  },
  {
    id: "ADVENTURE",
    html: await container.renderToString(MapMarker, {
      props: { type: "ADVENTURE" },
    }),
  },
  {
    id: "SWIM",
    html: await container.renderToString(MapMarker, {
      props: { type: "SWIM" },
    }),
  },
  {
    id: "DEFAULT",
    html: await container.renderToString(MapMarker, {
      props: { type: "DEFAULT" },
    }),
  },
];
---

<Layout title="Search Dog Parks, Treats & Watering Holes" footer={true}>
  <Fragment slot="head">
    <script src="https://cdn.jsdelivr.net/npm/leaflet@1.9.4/dist/leaflet.min.js"
    ></script>
    <link
      href="https://cdn.jsdelivr.net/npm/leaflet@1.9.4/dist/leaflet.min.css"
      rel="stylesheet"
    />
  </Fragment>

  <div
    role="alert"
    class="alert alert-warning absolute top-5 right-5 z-810 w-max shadow"
  >
    <WarningIcon class="w-6 h-6" />
    <span>Warning: This app is a work-in-progress!</span>
  </div>

  <div id="wag-wonders-map-container" class="w-full h-full"></div>
</Layout>

<script is:inline define:vars={{ points, makerPins }}>
  const PIN_MARKER_SIZE_CONFIG = {
    iconSize: [40, 40],
    iconAnchor: [20, 40],
    popupAnchor: [0, -35],
  };
  const MAP_MARKERS = Object.fromEntries(
    makerPins.map(({ id, html }) => [
      id,
      { className: id, html, ...PIN_MARKER_SIZE_CONFIG },
    ])
  );

  function getMarkerLoadingPopupContent() {
    return `
      <-- loading-popup -->
      <div class="card card-side border-neutral border gap-2 bg-base-100 shadow-xl p-2 font-body">
        <figure class="rounded-lg w-1/3 bg-base-200 shrink-0">
          <div class="skeleton h-full w-full rounded-none"></div>
        </figure>
        <div class="card-body gap-0 p-0">
          <div class="flex gap-2 items-center">
            <div class="skeleton h-8 w-8 shrink-0 rounded-full"></div>
            <h3 class="skeleton h-4 grow"></h3>
            <button class="btn btn-ghost btn-sm btn-square"><svg class="w-5 h-5" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M16 12C15.2089 12 14.4355 12.2346 13.7777 12.6741C13.1199 13.1136 12.6072 13.7384 12.3045 14.4693C12.0017 15.2002 11.9225 16.0044 12.0769 16.7804C12.2312 17.5563 12.6122 18.269 13.1716 18.8284C13.731 19.3878 14.4437 19.7688 15.2196 19.9231C15.9956 20.0775 16.7998 19.9983 17.5307 19.6955C18.2616 19.3928 18.8864 18.8801 19.3259 18.2223C19.7654 17.5645 20 16.7911 20 16C20 14.9391 19.5786 13.9217 18.8284 13.1716C18.0783 12.4214 17.0609 12 16 12ZM16 17C15.8022 17 15.6089 16.9414 15.4444 16.8315C15.28 16.7216 15.1518 16.5654 15.0761 16.3827C15.0004 16.2 14.9806 15.9989 15.0192 15.8049C15.0578 15.6109 15.153 15.4327 15.2929 15.2929C15.4327 15.153 15.6109 15.0578 15.8049 15.0192C15.9989 14.9806 16.2 15.0004 16.3827 15.0761C16.5654 15.1518 16.7216 15.28 16.8315 15.4444C16.9414 15.6089 17 15.8022 17 16C17 16.2652 16.8946 16.5196 16.7071 16.7071C16.5196 16.8946 16.2652 17 16 17ZM26 12C25.2089 12 24.4355 12.2346 23.7777 12.6741C23.1199 13.1136 22.6072 13.7384 22.3045 14.4693C22.0017 15.2002 21.9225 16.0044 22.0769 16.7804C22.2312 17.5563 22.6122 18.269 23.1716 18.8284C23.731 19.3878 24.4437 19.7688 25.2196 19.9231C25.9956 20.0775 26.7998 19.9983 27.5307 19.6955C28.2616 19.3928 28.8864 18.8801 29.3259 18.2223C29.7654 17.5645 30 16.7911 30 16C30 14.9391 29.5786 13.9217 28.8284 13.1716C28.0783 12.4214 27.0609 12 26 12ZM26 17C25.8022 17 25.6089 16.9414 25.4444 16.8315C25.28 16.7216 25.1518 16.5654 25.0761 16.3827C25.0004 16.2 24.9806 15.9989 25.0192 15.8049C25.0578 15.6109 25.153 15.4327 25.2929 15.2929C25.4327 15.153 25.6109 15.0578 25.8049 15.0192C25.9989 14.9806 26.2 15.0004 26.3827 15.0761C26.5654 15.1518 26.7216 15.28 26.8315 15.4444C26.9414 15.6089 27 15.8022 27 16C27 16.2652 26.8946 16.5196 26.7071 16.7071C26.5196 16.8946 26.2652 17 26 17ZM6 12C5.20888 12 4.43552 12.2346 3.77772 12.6741C3.11992 13.1136 2.60723 13.7384 2.30448 14.4693C2.00173 15.2002 1.92252 16.0044 2.07686 16.7804C2.2312 17.5563 2.61216 18.269 3.17157 18.8284C3.73098 19.3878 4.44372 19.7688 5.21964 19.9231C5.99556 20.0775 6.79983 19.9983 7.53074 19.6955C8.26164 19.3928 8.88635 18.8801 9.32588 18.2223C9.76541 17.5645 10 16.7911 10 16C10 14.9391 9.57857 13.9217 8.82843 13.1716C8.07828 12.4214 7.06087 12 6 12ZM6 17C5.80222 17 5.60888 16.9414 5.44443 16.8315C5.27998 16.7216 5.15181 16.5654 5.07612 16.3827C5.00043 16.2 4.98063 15.9989 5.01922 15.8049C5.0578 15.6109 5.15304 15.4327 5.2929 15.2929C5.43275 15.153 5.61093 15.0578 5.80491 15.0192C5.99889 14.9806 6.19996 15.0004 6.38269 15.0761C6.56541 15.1518 6.72159 15.28 6.83147 15.4444C6.94135 15.6089 7 15.8022 7 16C7 16.2652 6.89464 16.5196 6.70711 16.7071C6.51957 16.8946 6.26522 17 6 17Z" fill="#343330"/>
              </svg>
            </button>
          </div>
          <div class="divider m-0"></div>
          <div class="flex gap-1 items-center hover:underline">
            <div class="skeleton h-2 w-28 mb-1"></div>
          </div>
          <div class="grow">
            <div class="skeleton h-3 w-full mb-1"></div>
            <div class="skeleton h-3 w-full mb-1"></div>
          </div>
          <span class="mt-2 font-bold text-secondary">Features:</span>
          <ul class="list-disc ml-4">
            <li class="skeleton h-3 w-28 mb-1"></li>
            <li class="skeleton h-3 w-28 mb-1"></li>
            <li class="skeleton h-3 w-28 mb-1"></li>
          </ul>
          <div class="card-actions justify-end">
            <button class="btn btn-sm btn-primary" disabled>
              <svg class="w-5 h-5" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M25 20.5C24.0698 20.5013 23.1627 20.7903 22.4031 21.3274C21.6436 21.8645 21.0688 22.6234 20.7575 23.5H9C8.07174 23.5 7.1815 23.1313 6.52513 22.4749C5.86875 21.8185 5.5 20.9283 5.5 20C5.5 19.0717 5.86875 18.1815 6.52513 17.5251C7.1815 16.8687 8.07174 16.5 9 16.5H21C22.4587 16.5 23.8576 15.9205 24.8891 14.8891C25.9205 13.8576 26.5 12.4587 26.5 11C26.5 9.54131 25.9205 8.14236 24.8891 7.11091C23.8576 6.07946 22.4587 5.5 21 5.5H9C8.60218 5.5 8.22064 5.65804 7.93934 5.93934C7.65804 6.22064 7.5 6.60218 7.5 7C7.5 7.39782 7.65804 7.77936 7.93934 8.06066C8.22064 8.34196 8.60218 8.5 9 8.5H21C21.663 8.5 22.2989 8.76339 22.7678 9.23223C23.2366 9.70107 23.5 10.337 23.5 11C23.5 11.663 23.2366 12.2989 22.7678 12.7678C22.2989 13.2366 21.663 13.5 21 13.5H9C7.27609 13.5 5.62279 14.1848 4.40381 15.4038C3.18482 16.6228 2.5 18.2761 2.5 20C2.5 21.7239 3.18482 23.3772 4.40381 24.5962C5.62279 25.8152 7.27609 26.5 9 26.5H20.7575C21.0325 27.2778 21.516 27.9651 22.1553 28.4866C22.7945 29.0082 23.5648 29.344 24.3819 29.4573C25.1991 29.5707 26.0317 29.4572 26.7888 29.1293C27.5458 28.8014 28.1981 28.2716 28.6744 27.598C29.1507 26.9244 29.4327 26.1328 29.4895 25.3098C29.5463 24.4867 29.3757 23.6639 28.9964 22.9313C28.6172 22.1986 28.0438 21.5843 27.339 21.1555C26.6341 20.7267 25.825 20.5 25 20.5ZM25 26.5C24.7033 26.5 24.4133 26.412 24.1666 26.2472C23.92 26.0824 23.7277 25.8481 23.6142 25.574C23.5007 25.2999 23.4709 24.9983 23.5288 24.7074C23.5867 24.4164 23.7296 24.1491 23.9393 23.9393C24.1491 23.7296 24.4164 23.5867 24.7074 23.5288C24.9983 23.4709 25.2999 23.5007 25.574 23.6142C25.8481 23.7277 26.0824 23.92 26.2472 24.1666C26.412 24.4133 26.5 24.7033 26.5 25C26.5 25.3978 26.342 25.7794 26.0607 26.0607C25.7794 26.342 25.3978 26.5 25 26.5Z" fill="#343330"/>
              </svg>
              <span class="text-primary-content">Get Directions</span>
            </button>
          </div>
        </div>
      </div>
    `;
  }

  function getMarkerIcon(type) {
    if (type in MAP_MARKERS) {
      return L.divIcon(MAP_MARKERS[type]);
    }

    return L.divIcon(MAP_MARKERS["DEFAULT"]);
  }

  function getPopUpWidth() {
    const width = window.innerWidth - 100;

    if (width > 500) return 500;

    return width;
  }

  function handleCenterMarkerOnClick(map, e) {
    const clickedLatLng = e.latlng;
    const mapZoom = map.getZoom();

    // get the map viewport bounds
    const bounds = map.getBounds();

    // get the pixel coordinates of the bounds
    const southWest = map.project(bounds.getSouthWest(), mapZoom);
    const northEast = map.project(bounds.getNorthEast(), mapZoom);

    // calculate the viewport height in pixels
    const viewportHeight = Math.abs(southWest.y - northEast.y);

    // calculate vertical offset (bottom of viewport)
    const PADDING = 30;
    const verticalOffsetPixels = viewportHeight / 2 - PADDING;

    // get pixel coordinate of the clicked lat-lng
    const clickedPoint = map.project(clickedLatLng, mapZoom);

    // calculate the new pixel coordinate to shift the clicked point to the bottom center
    const newCenterPoint = {
      x: clickedPoint.x,
      y: clickedPoint.y - verticalOffsetPixels,
    };

    // convert the new bottom centered pixel coordinate to lat-lng
    const newCenterLatLng = map.unproject(newCenterPoint, mapZoom);

    // set the map view to the new center lat-lng
    map.setView(newCenterLatLng, mapZoom);
  }

  document.addEventListener("DOMContentLoaded", function () {
    const map = window.L.map("wag-wonders-map-container", {
      attributionControl: false,
    });
    map.setView([-37.8136, 144.9631], 11);

    const mapAttrControl = window.L.control.attribution().addTo(map);
    mapAttrControl.setPrefix(
      '<a href="https://leafletjs.com/" target="_blank">Leaflet</a>'
    );

    const tileLayer = window.L.tileLayer(
      "https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png",
      {
        attribution:
          '&copy; <a href="https://carto.com/attributions" target="_blank">CARTO</a>',
        maxZoom: 20,
        minZoom: 10,
      }
    );
    tileLayer.addTo(map);

    points.forEach((point) => {
      let marker = L.marker([point.coordinates[0], point.coordinates[1]], {
        id: point.id,
        icon: getMarkerIcon(point.type),
      });
      marker.bindPopup(getMarkerLoadingPopupContent(), {
        className: "wag-wonders-map-point-popup",
        minWidth: getPopUpWidth(),
      });
      marker.on("click", async (e) => {
        handleCenterMarkerOnClick(map, e);
        const popup = e.target.getPopup();
        const isLoadingPopup = popup
          .getContent()
          ?.includes("<-- loading-popup -->");
        // check if popup has already been requested
        if (!isLoadingPopup) return;

        const response = await fetch(
          `/api/map/locations/${e.target.options.id}/popup.html`
        );
        const html = await response.text();
        popup.setContent(html);
      });
      marker.addTo(map);
    });
  });
</script>
